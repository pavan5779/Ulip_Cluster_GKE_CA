name: Build and Deploy to GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: settyl-gcp-infra
  CLUSTER_NAME: ulipsystem
  REGION: asia-south1
  ARTIFACT_REPO: supplychainvisibilitygcr
  ARTIFACT_REGION: asia-south1

jobs:
  build-and-deploy:
    name: Build and Deploy to GKE
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Authenticate with Google Cloud
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      # Step 3: Set up gcloud CLI
      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          project_id: ${{ env.PROJECT_ID }}

      # Step 4: Install gke-gcloud-auth-plugin
      - name: Install gke-gcloud-auth-plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin

      # Step 5: Configure Docker to Use Artifact Registry
      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${ARTIFACT_REGION}-docker.pkg.dev

      # Step 6: Build and Push Docker Images
      - name: Build and Push Docker Images
        run: |
          IMAGES=("ulipvahanapi" "internalotrulipapi" "ulipfastagapi" "ulipintermodalapi")
          for IMAGE in "${IMAGES[@]}"; do
            docker build -t ${ARTIFACT_REGION}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${IMAGE}:latest -f Dockerfile.${IMAGE} .
            docker push ${ARTIFACT_REGION}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${IMAGE}:latest
          done

      # Step 7: Set up GKE context
      - name: Set up GKE context
        run: |
          gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }} \
            --region ${{ env.REGION }} \
            --project ${{ env.PROJECT_ID }}

      # Step 8: Deploy to GKE
      - name: Deploy to GKE
        run: |
          kubectl apply -f manifests/staging/deployment.yml
          kubectl apply -f manifests/staging/service.yml

      # Step 9: Verify Deployment
      - name: Verify Deployment
        run: |
          kubectl get all --namespace=ulipsystem

      # Step 10: Notify on Deployment Success
      - name: Notify Deployment Success
        if: success()
        run: |
          echo "Deployment to GKE was successful!"
